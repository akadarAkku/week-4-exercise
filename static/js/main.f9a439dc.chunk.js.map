{"version":3,"sources":["composition.js","context.js","index.js"],"names":["Comp1","ColoredSection","children","style","backgroundColor","Comp2","item","ListItem","Ex1","Toolbar","ShoppingCart","MyButton","ColorContext","createContext","Ex2","Provider","OtherToolbar","OtherShoppingCart","MyOtherButton","useContext","Ex3","useState","setColor","onClick","_","Ex4","ThemeContext","color","Ex5","value","ThemedToolbar","ThemedShoppingCart","ThemedButton","theme","ReactDOM","render","className","document","getElementById"],"mappings":"sJAIMA,EAAQ,WACV,OACI,iCACI,kBAAC,EAAD,KACC,wCAKPC,EAAiB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,SAErB,OACI,6BACI,yBAAKC,MAAO,CAACC,gBAAiB,SAEzBF,GAEL,yBAAKC,MAAO,CAACC,gBAAiB,cAUpCC,EAAQ,WACV,OACI,4BACI,kBAAC,EAAD,CAAUC,KAAM,OACZ,wCACA,2CAEJ,kBAAC,EAAD,CAAUA,KAAM,OACZ,wCACA,6CAMVC,EAAW,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,KAAMJ,EAAe,EAAfA,SACtB,OACI,4BACKI,EACAJ,I,OC9CPM,EAAM,WAKR,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QAKNC,EAAU,WACZ,OACI,6BACI,kBAAC,EAAD,QAKNC,EAAe,WACjB,OACI,6BACI,kBAAC,EAAD,QAKNC,EAAW,SAAC,GAAmC,IAAD,IAAhCP,uBAAgC,MAAd,QAAc,EAChD,OAAO,4BAAQD,MAAO,CAACC,gBAAiB,QAAUA,IAA3C,UAMLQ,EAAeC,wBAAc,QAE7BC,EAAM,WACR,OACI,6BAEI,kBAACF,EAAaG,SAAd,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,SAMVC,EAAe,WACjB,OACI,6BACI,kBAAC,EAAD,QAKNC,EAAoB,WACtB,OACI,6BACI,kBAAC,EAAD,QAKNC,EAAgB,WAClB,IAAMd,EAAkBe,qBAAWP,GACnC,OAAO,4BAAQT,MAAO,CAACC,gBAAiBA,IAAjC,UAMLgB,EAAM,WAAO,IAAD,EAEYC,mBAAS,QAFrB,mBAEAC,GAFA,WAId,OACI,6BAEI,kBAACV,EAAaG,SAAd,KACI,4BAAQQ,QAAS,SAAAC,GAAC,OAAIF,EAAS,UAA/B,QACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAS,UAA/B,QACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAS,WAA/B,SACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAS,YAA/B,WAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,QAQNG,EAAM,WAAO,IAAD,EAEYJ,mBAAS,QAFrB,mBAEAC,GAFA,WAId,OACI,6BAEI,kBAACV,EAAaG,SAAd,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,4BAAQQ,QAAS,SAAAC,GAAC,OAAIF,EAAS,UAA/B,QACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAS,UAA/B,QACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAS,WAA/B,SACA,4BAAQC,QAAS,SAAAC,GAAC,OAAIF,EAAS,YAA/B,aASVI,EAAeb,wBAAc,CAC/Bc,MAAO,QACPvB,gBAAiB,UAGfwB,EAAM,WAKR,OACI,6BACI,kBAAChB,EAAaG,SAAd,CAAuBc,MAJjB,IAKF,kBAAC,EAAD,MACA,kBAAC,EAAD,SAOVC,EAAgB,WAClB,OACI,6BACI,kBAAC,EAAD,QAKNC,EAAqB,WACvB,OACI,6BACI,kBAAC,EAAD,QAKNC,EAAe,WACjB,IAAMC,EAAQd,qBAAWO,GAEzB,OAAO,4BAAQvB,MAAO,CAACC,gBAAiB6B,EAAM7B,gBAAiBuB,MAAOM,EAAMN,QAArE,U,KCrHXO,IAASC,OAAO,mBAtCJ,WACR,OACI,6BAASC,UAAU,OAEf,8CAEA,6BAASA,UAAU,YACf,2CAEA,0CACA,kBAAC,EAAD,MAEA,0CACA,kBAAC,EAAD,OAGJ,6BAASA,UAAU,YACf,uCAEA,0CACA,kBAAC,EAAD,MAEA,0CACA,kBAAC,EAAD,MAEA,0CACA,kBAAC,EAAD,MAEA,0CACA,kBAAC,EAAD,MAEA,0CACA,kBAAC,EAAD,UAMA,MAAQC,SAASC,eAAe,U","file":"static/js/main.f9a439dc.chunk.js","sourcesContent":["import React, {createContext, useContext, useState} from 'react';\r\n\r\n// Composition 1: The children props\r\n// TODO: use the children prop in the correct location\r\nconst Comp1 = () => {\r\n    return (\r\n        <section>\r\n            <ColoredSection>\r\n             <p>Foobar</p>\r\n            </ColoredSection>\r\n        </section>\r\n    )\r\n};\r\nconst ColoredSection = ({children }) => {\r\n    // Move the children props to the correct location\r\n    return (\r\n        <div>\r\n            <div style={{backgroundColor: 'pink'}}>\r\n                \r\n                {children}\r\n            </div >\r\n            <div style={{backgroundColor: 'yallow'}}>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n// Compostion 2: Adding functionality with composition\r\n// TODO: change the order, make sure the buttons are first\r\n\r\nconst Comp2 = () => {\r\n    return (\r\n        <ul>\r\n            <ListItem item={'foo'}>\r\n                <button>Edit</button>\r\n                <button>Delete</button>\r\n            </ListItem>\r\n            <ListItem item={'bar'}>\r\n                <button>Edit</button>\r\n                <button>Delete</button>\r\n            </ListItem>\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst ListItem = ({ item, children }) => {\r\n    return (\r\n        <li>\r\n            {item}\r\n            {children}\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport { Comp1, Comp2 };","import React, {createContext, useContext, useState} from 'react';\r\n\r\n// Exercise 1: Passing props\r\n// TODO: Make all the buttons black\r\nconst Ex1 = () => {\r\n\r\n    // Pass the background color through to the components\r\n    const backgroundColor = 'black';\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar  />\r\n            <ShoppingCart />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Toolbar = () => {\r\n    return (\r\n        <div>\r\n            <MyButton />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ShoppingCart = () => {\r\n    return (\r\n        <div>\r\n            <MyButton />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst MyButton = ({ backgroundColor = 'black' }) => {\r\n    return <button style={{backgroundColor: 'black' + backgroundColor}}>Click</button>\r\n};\r\n\r\n// Exercise 2: Context\r\n// TODO: Make all the buttons black\r\n\r\nconst ColorContext = createContext('pink');\r\n\r\nconst Ex2 = () => {\r\n    return (\r\n        <div>\r\n            {/* Set a property value on the provider with as a value \"black\" */}\r\n            <ColorContext.Provider >\r\n                <OtherToolbar />\r\n                <OtherShoppingCart />\r\n            </ColorContext.Provider>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst OtherToolbar = () => {\r\n    return (\r\n        <div>\r\n            <MyOtherButton />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst OtherShoppingCart = () => {\r\n    return (\r\n        <div>\r\n            <MyOtherButton />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst MyOtherButton = () => {\r\n    const backgroundColor = useContext(ColorContext);\r\n    return <button style={{backgroundColor: backgroundColor}}>Click</button>\r\n};\r\n\r\n// Exercise 3: Using state and context\r\n// TODO: Use state as the context value\r\n\r\nconst Ex3 = () => {\r\n\r\n    const [color, setColor] = useState('pink');\r\n\r\n    return (\r\n        <div>\r\n            {/* Set a property value on the provider with as a value color */}\r\n            <ColorContext.Provider> \r\n                <button onClick={_ => setColor('pink')}>Pink</button>\r\n                <button onClick={_ => setColor('blue')}>Blue</button>\r\n                <button onClick={_ => setColor('black')}>Black</button>\r\n                <button onClick={_ => setColor('yellow')}>Yellow</button>\r\n            </ColorContext.Provider>\r\n            <OtherToolbar />\r\n            <OtherShoppingCart />\r\n        </div>\r\n    )\r\n};\r\n\r\n// Exercise 4: Fix the bug\r\n// TODO: Fix the bug\r\n\r\nconst Ex4 = () => {\r\n\r\n    const [color, setColor] = useState('pink');\r\n\r\n    return (\r\n        <div>\r\n            {/* Set a property value on the provider with as a value color */}\r\n            <ColorContext.Provider>\r\n                <OtherToolbar />\r\n                <OtherShoppingCart />\r\n                <button onClick={_ => setColor('pink')}>Pink</button>\r\n                <button onClick={_ => setColor('blue')}>Blue</button>\r\n                <button onClick={_ => setColor('black')}>Black</button>\r\n                <button onClick={_ => setColor('yellow')}>Yellow</button>\r\n            </ColorContext.Provider>\r\n        </div>\r\n    )\r\n};\r\n\r\n// Exercise 5: a more complex context\r\n// TODO: make sure the context works\r\n\r\nconst ThemeContext = createContext({\r\n    color: 'white',\r\n    backgroundColor: 'black'\r\n});\r\n\r\nconst Ex5 = () => {\r\n\r\n    {/* Set an appropriate theme */}\r\n    const theme = {};\r\n\r\n    return (\r\n        <div>\r\n            <ColorContext.Provider value={theme}>\r\n                <ThemedToolbar />\r\n                <ThemedShoppingCart />\r\n            </ColorContext.Provider>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ThemedToolbar = () => {\r\n    return (\r\n        <div>\r\n            <ThemedButton />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ThemedShoppingCart = () => {\r\n    return (\r\n        <div>\r\n            <ThemedButton />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ThemedButton = () => {\r\n    const theme = useContext(ThemeContext);\r\n\r\n    return <button style={{backgroundColor: theme.backgroundColor, color: theme.color}}>Click</button>\r\n};\r\n\r\n\r\nexport { Ex1, Ex2, Ex3, Ex4, Ex5 };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Comp1, Comp2} from \"./composition\";\r\nimport {Ex1, Ex2, Ex3, Ex4, Ex5} from \"./context\";\r\n\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <section className=\"app\">\r\n\r\n            <h1>React - Week 4</h1>\r\n\r\n            <section className=\"app_goal\">\r\n                <h2>Composition</h2>\r\n\r\n                <h3>Exercise 1</h3>\r\n                <Comp1/>\r\n\r\n                <h3>Exercise 1</h3>\r\n                <Comp2/>\r\n            </section>\r\n\r\n            <section className=\"app_goal\">\r\n                <h2>Context</h2>\r\n\r\n                <h3>Exercise 1</h3>\r\n                <Ex1/>\r\n\r\n                <h3>Exercise 2</h3>\r\n                <Ex2/>\r\n\r\n                <h3>Exercise 3</h3>\r\n                <Ex3/>\r\n\r\n                <h3>Exercise 4</h3>\r\n                <Ex4/>\r\n\r\n                <h3>Exercise 5</h3>\r\n                <Ex5/>\r\n            </section>\r\n        </section>\r\n    )\r\n};\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}